#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
BaseTransform.TypeLongDesc.Filter=Filter
BaseTransform.TypeTooltipDesc.Filter=Filter rows using a condition expression
Filter.Exception.UnexpectedErrorFoundInEvaluationFuction=Unexpected error found in evaluation function : 
Filter.Log.ErrorOccurredForRow=Error occurred for row: 
Filter.Log.LineNumber=linenr 
Filter.Log.TargetTransformInvalid=transform [{0}] is invalid as target.
Filter.CheckResult.FieldsNotFoundFromPreviousTransform=Fields {0} used in the condition are not found in input from previous transforms
FilterDialog.Shell.Title=Filter rows
FilterDialog.TransformName.Label=Transform name 
FilterDialog.SendTrueTo.Label=Send ''true'' data to transform:
FilterDialog.SendFalseTo.Label=Send ''false'' data to transform:
FilterDialog.Condition.Label=The condition: 
FilterDialog.FailedToGetFields.DialogTitle=Get fields failed
FilterDialog.FailedToGetFields.DialogMessage=Unable to get fields from previous transforms because of an error 
FilterMeta.Exception..UnableToLoadTransformMetaFromXML=Unable to load transform info from XML
FilterMeta.CheckResult.NoConditionSpecified=transform has no condition specified.
FilterMeta.CheckResult.ConditionSpecified=transform has a condition specified.
FilterMeta.CheckResult.TransformReceivingFields=Transform is connected to previous one, receiving {0} fields
FilterMeta.CheckResult.FieldsNotFoundFromPreviousTransform=Fields used in the condition, not found in input from previous transforms:
FilterMeta.CheckResult.AllFieldsFoundInInputStream=All fields to compare with are found in the input stream.
FilterMeta.CheckResult.CouldNotReadFieldsFromPreviousTransform=Couldn''t read fields from the previous transform.
FilterMeta.CheckResult.TransformReceivingInfoFromOtherTransforms=Transform is receiving info from other transforms.
FilterMeta.CheckResult.NoInputReceivedFromOtherTransforms=No input received from other transforms\!
FilterMeta.CheckResult.TargetTransformInvalid=transform for {0} target [{1}] is invalid.
FilterMeta.InfoStream.True.Description=Result is TRUE
FilterMeta.InfoStream.False.Description=Result is FALSE
FilterMeta.Injection.SEND_TRUE_TRANSFORM=The name of the transform to send rows to when the condition is true.
FilterMeta.Injection.SEND_FALSE_TRANSFORM=The name of the transform to send rows to when the condition is false.
FilterMeta.Injection.CONDITION=The condition to limit the number of output rows.
FilterMeta.CheckResult.ConditionParsedCorrectly=Condition expression parsed correctly.
FilterMeta.CheckResult.ConditionParsedWithErrors=Condition expression {0} parsed with errors: {1}
